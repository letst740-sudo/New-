from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext

from app.keyboards import (
    back_only_inline, main_kb, gender_kb, weather_inline, vk_only_inline, tg_only_inline, contact_inline,
    BTN_WEATHER, BTN_MOVIES, BTN_TRANSP, BTN_RATES, BTN_NEWS_VK, BTN_NEWS_TG, BTN_CONTACT, BTN_AI, BTN_CONTACTS_CITY
)
from app.states import RegStates
from app.storage import upsert_user, get_user, log_event
from app.services import weather as W
from app.services import rates as R
from app.services import movies as M
from app.config import settings

router = Router()

# –ú—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ñ–ª—É–¥–∞
import asyncio
async def _del_after(msg: Message, delay: float = 0.9):
    await asyncio.sleep(delay)
    try:
        await msg.delete()
    except Exception:
        pass


# -------------------- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / —Å—Ç–∞—Ä—Ç --------------------
@router.message(CommandStart())
async def start(m: Message, state: FSMContext):
    user = await get_user(m.from_user.id)
    if user:
        # –£–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await _del_after(m)
        return await m.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_kb())

    nickname = m.from_user.username and ("@" + m.from_user.username) or (m.from_user.first_name or "–ì–æ—Å—Ç—å")
    await state.update_data(nickname=nickname[:64])
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f"üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ {nickname}", callback_data="reg:start")]
    ])
    await _del_after(m)
    await m.answer(
        "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <u>MarksCity</u>!</b>\n\n"
        "<em>–ì–æ—Ä–æ–¥—Å–∫–æ–π –ø–æ–º–æ—â–Ω–∏–∫: –ø–æ–≥–æ–¥–∞, –∫–∏–Ω–æ, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –∫—É—Ä—Å—ã –∏ –ò–ò.</em>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.",
        reply_markup=kb,
        parse_mode="HTML",
    )


@router.callback_query(F.data == "reg:start")
async def reg_start(c: CallbackQuery, state: FSMContext):
    await state.set_state(RegStates.ASK_GENDER)
    await c.message.edit_text("<b>–ü–æ–ª</b> ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ:", reply_markup=gender_kb(), parse_mode="HTML")


@router.callback_query(F.data.startswith("gender:"), RegStates.ASK_GENDER)
async def set_gender(c: CallbackQuery, state: FSMContext):
    gender = "–ú—É–∂—Å–∫–æ–π" if c.data.endswith("M") else "–ñ–µ–Ω—Å–∫–∏–π"
    await state.update_data(gender=gender)
    await state.set_state(RegStates.ASK_AGE)
    data = await state.get_data()
    nick = data.get("nickname") or (c.from_user.username and ("@" + c.from_user.username)) or (c.from_user.first_name or "‚Äî")
    await c.message.edit_text(
        f"<b>–í–∞—à –Ω–∏–∫:</b> {nick}\n<b>–ü–æ–ª:</b> {gender}\n–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ <b>–≤–æ–∑—Ä–∞—Å—Ç</b>:",
        reply_markup=None,
        parse_mode="HTML",
    )


@router.message(RegStates.ASK_AGE)
async def set_age(m: Message, state: FSMContext):
    try:
        age = int(m.text.strip())
        if age <= 0:
            raise ValueError
    except Exception:
        return await m.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

    data = await state.get_data()
    nick = data.get("nickname") or (m.from_user.username and ("@" + m.from_user.username)) or (m.from_user.first_name or "‚Äî")
    gender = data.get("gender", "–ú—É–∂—Å–∫–æ–π")
    await upsert_user(m.from_user.id, nick, gender, age)
    await state.clear()
    await _del_after(m)
    await m.answer("<b>–ì–æ—Ç–æ–≤–æ!</b> –í—ã–±–∏—Ä–∞–π—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ üëá", reply_markup=main_kb(), parse_mode="HTML")


# -------------------- –†–∞–∑–¥–µ–ª—ã --------------------
@router.message(F.text == BTN_NEWS_VK)
async def news_vk(m: Message):
    await _del_after(m)
    await m.answer(
        "<b>üì∞ –°–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –∏ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ ‚Äî —Ç–µ–ø–µ—Ä—å –≤ –Ω–∞—à–µ–º VK!</b>",
        reply_markup=vk_only_inline(settings.vk_url),
        parse_mode="HTML",
    )


@router.message(F.text == BTN_NEWS_TG)
async def news_tg(m: Message):
    await _del_after(m)
    await m.answer(
        "<b>üì¢ –í—Å—ë, —á—Ç–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å, —É–∂–µ –∂–¥—ë—Ç –≤–∞—Å –≤ TG!</b>",
        reply_markup=tg_only_inline(settings.tg_url),
        parse_mode="HTML",
    )


@router.message(F.text == BTN_CONTACT)
async def contact(m: Message):
    await _del_after(m)
    await m.answer(
        "<b>üìÆ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>",
        reply_markup=contact_inline("https://vk.com/yodatox", "@Listen_mp4"),
        parse_mode="HTML",
    )


@router.message(F.text == BTN_WEATHER)
async def weather(m: Message):
    await _del_after(m)
    await log_event(m.from_user.id, "weather")
    user = await get_user(m.from_user.id)

    data = await W.get_weather_cached()
    cur = data.get("current", {})

    t = cur.get("temperature_2m")
    tfeels = cur.get("apparent_temperature")
    wind = cur.get("wind_speed_10m", 0.0) or 0.0
    rain = cur.get("precipitation", 0.0) or 0.0

    gender = (user["gender"] if user else "–ú—É–∂—Å–∫–æ–π")
    try:
        t_f = float(t) if t is not None else 0.0
        tf_f = float(tfeels) if tfeels is not None else t_f
        w_f = float(wind)
        r_f = float(rain)
    except Exception:
        t_f = tf_f = w_f = r_f = 0.0

    advice = W.outfit_advice(t_f, w_f, r_f, gender)
    text = (
        "üå§ <b>–ü–æ–≥–æ–¥–∞ –≤ –ú–∞—Ä–∫—Å–µ</b>\n\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>{t_f:.0f}¬∞C</b> (–æ—â—É—â–∞–µ—Ç—Å—è: {tf_f:.0f}¬∞C)\n"
        f"üí® –í–µ—Ç–µ—Ä: <b>{w_f:.0f} –º/—Å</b>\n"
        f"üåß –û—Å–∞–¥–∫–∏: <b>{r_f} –º–º</b>\n\n"
        f"üëï <i>–°–æ–≤–µ—Ç ({gender[:1]})</i>: {advice}"
    )
    await m.answer(text, reply_markup=weather_inline(), parse_mode="HTML")


@router.callback_query(F.data == "weather:refresh")
async def weather_refresh(c: CallbackQuery):
    try:
        await W.fetch_weather()
        await c.answer("–û–±–Ω–æ–≤–ª–µ–Ω–æ", show_alert=False)
    except Exception:
        await c.answer("–ü–æ–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞—é –∫—ç—à.", show_alert=False)
    # –ü–µ—Ä–µ—Ä–∏—Å—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ–≥–æ–¥—ã:
    m = Message.model_construct(**c.message.model_dump())
    await weather(m)


@router.message(F.text == BTN_RATES)
async def rates(m: Message):
    await _del_after(m)
    await log_event(m.from_user.id, "rates")

    fiat, crypto = await R.get_rates_cached()
    rates_map = fiat.get("rates", {})
    try:
        usd_val = float(rates_map.get("USD")) if rates_map.get("USD") else None
        eur_val = float(rates_map.get("EUR")) if rates_map.get("EUR") else None
        usd_rub = (1 / usd_val) if usd_val and usd_val > 0 else None
        eur_rub = (1 / eur_val) if eur_val and eur_val > 0 else None
    except Exception:
        usd_rub = eur_rub = None

    btc = crypto.get("bitcoin", {}).get("usd")
    ton = crypto.get("toncoin", {}).get("usd")
    eth = crypto.get("ethereum", {}).get("usd")

    text = "üí± <b>–ö—É—Ä—Å—ã</b>\n"
    text += f"USD: {usd_rub:.2f} ‚ÇΩ\n" if usd_rub else "USD: ‚Äî\n"
    text += f"EUR: {eur_rub:.2f} ‚ÇΩ\n" if eur_rub else "EUR: ‚Äî\n"
    text += f"BTC: {btc:.2f} $\n" if btc else "BTC: ‚Äî\n"
    text += f"TON: {ton:.2f} $\n" if ton else "TON: ‚Äî\n"
    text += f"ETH: {eth:.2f} $\n" if eth else "ETH: ‚Äî\n"
    await m.answer(text, reply_markup=back_only_inline(), parse_mode="HTML")


@router.message(F.text == BTN_MOVIES)
async def movies(m: Message):
    await _del_after(m)
    await log_event(m.from_user.id, "cinema")
    try:
        items = await M.fetch_movies()
    except Exception:
        items = []

    if not items:
        return await m.answer("‚ö†Ô∏è –°–µ–π—á–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ–∞–Ω—Å–∞—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=back_only_inline())

    CLOCK = "\U0001F552"
    parts = []
    for it in items[:12]:
        title = it.get("title", "")
        times = ", ".join(it.get("times") or [])
        parts.append(f"üé¨ <b>{title}</b>\n{CLOCK} {times if times else '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}")

    await m.answer("üé¨ <b>–°–µ–∞–Ω—Å—ã —Å–µ–≥–æ–¥–Ω—è</b>\n\n" + "\n\n".join(parts), reply_markup=back_only_inline(), parse_mode="HTML")


@router.message(F.text == BTN_TRANSP)
async def transport(m: Message):
    await _del_after(m)
    await log_event(m.from_user.id, "transport")
    await m.answer(
        "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ CSV –≤ <code>data/transport.csv</code> "
        "(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –∞–¥–º–∏–Ω–∫–∏).",
        reply_markup=back_only_inline(),
        parse_mode="HTML",
    )


@router.message(F.text == BTN_AI)
async def ai_intro(m: Message):
    await _del_after(m)
    await m.answer(
        "<b>ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å</b> ‚Äî –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n"
        "<i>–î–ª—è —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:</i> /ai_reset",
        reply_markup=back_only_inline(),
        parse_mode="HTML",
    )


@router.message(Command("ai_reset"))
async def ai_reset(m: Message):
    await m.answer("–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω. –ü–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.", reply_markup=back_only_inline())


# -------------------- –ì–æ—Ä–æ–¥ –Ω–∞ —Å–≤—è–∑–∏ --------------------
CITY_CONTACTS_TEXT = """
üèõ <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</b> üèõ
+7 (84567) 5-55-55 - –ü—Ä–∏–µ–º–Ω–∞—è –≥–ª–∞–≤—ã –ú–∞—Ä–∫—Å–æ–≤—Å–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞
+7 (84567) 5-10-02 - –ï–¥–∏–Ω–∞—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∞—è —Å–ª—É–∂–±–∞
+7 (84567) 5-17-80 - –ö–æ–º–∏—Ç–µ—Ç –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
+7 (84567) 5-13-04 - –ö–æ–º–∏—Ç–µ—Ç –∫—É–ª—å—Ç—É—Ä—ã —Å–ø–æ—Ä—Ç–∞ –∏ –º–æ–ª–æ–¥–µ–∂–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
+7 (84567) 5-18-35 - –ö–æ–º–∏—Ç–µ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞

üè• <b>–ë–æ–ª—å–Ω–∏—Ü–∞</b> üè•
‚òéÔ∏è –ü—Ä–∏—ë–º–Ω–∞—è –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ä–∞—á–∞ –ì–£–ó –°–û "–ú–∞—Ä–∫—Å–æ–≤—Å–∫–∞—è –†–ë" ‚Äî +79020422444
‚òéÔ∏è –ü—Ä–∏—ë–º–Ω–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∏ ‚Äî +79003148548
‚òéÔ∏è –ü—Ä–∏—ë–º–Ω–∞—è –¥–µ—Ç—Å–∫–æ–π –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∏ ‚Äî +79003149510
‚òéÔ∏è –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ä–∞—á–∞ –ø–æ –ª–µ—á–µ–±–Ω–æ–π —Ä–∞–±–æ—Ç–µ ‚Äî +79018208666
‚òéÔ∏è –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ä–∞—á–∞ –ø–æ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç—Ä—É–¥–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ ‚Äî 8 84567 5‚Äë39‚Äë60

‚òéÔ∏è –ê–∫—É—à–µ—Ä—Å–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë49‚Äë20
‚òéÔ∏è –ë–∞–∫. –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è ‚Äî 8 84567 5‚Äë43‚Äë25

‚òéÔ∏è –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è
‚Ä¢ –ì–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä ‚Äî +79018209222
‚Ä¢ –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª ‚Äî +79003149446, +79003149450
‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª ‚Äî +79003149483
‚Ä¢ –†–∞—Å—á—ë—Ç–Ω—ã–π –æ—Ç–¥–µ–ª ‚Äî +79003149489

‚òéÔ∏è –ì–∏–Ω–µ–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë53‚Äë40
‚òéÔ∏è –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –æ–±–æ—Ä–æ–Ω–∞ ‚Äî +79003145963
‚òéÔ∏è –î–µ—Ç—Å–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë47‚Äë71
‚òéÔ∏è –ñ–µ–Ω—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (–ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞) ‚Äî +79003147902
‚òéÔ∏è –ò–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë57‚Äë11
‚òéÔ∏è –ö–ª–∏–Ω–∏–∫–æ‚Äë–¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë46‚Äë20
‚òéÔ∏è –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏—è (–ö–¢) ‚Äî +79271024597
‚òéÔ∏è –û—Ç–¥–µ–ª –∑–∞–∫—É–ø–æ–∫ ‚Äî +79003103888

‚òéÔ∏è –û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤
‚Ä¢ –ù–∞—á–∞–ª—å–Ω–∏–∫ ‚Äî +79962008111
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã ‚Äî +79003147848, +79003147863

‚òéÔ∏è –û—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞ ‚Äî +79003145963
‚òéÔ∏è –ü—Ä–∏—ë–º–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî +79003145664
‚òéÔ∏è –†–µ–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë39‚Äë85
‚òéÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞ –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∏ ‚Äî +79003105444
‚òéÔ∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞ –¥–µ—Ç—Å–∫–æ–π –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∏ ‚Äî +79020433888
‚òéÔ∏è –°–ø—Ä–∞–≤–∫–∏ –æ —Å–º–µ—Ä—Ç–∏ ‚Äî +79003148382
‚òéÔ∏è –¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë49‚Äë40
‚òéÔ∏è –§–ª—é–æ—Ä–æ–≥—Ä–∞—Ñ–∏—è (–ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞) ‚Äî 8 84567 5‚Äë59‚Äë84
‚òéÔ∏è –•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë39‚Äë80
‚òéÔ∏è –•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª (—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä) ‚Äî 8 84567 5‚Äë45‚Äë21
‚òéÔ∏è –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª ‚Äî +79003145668
‚òéÔ∏è –Æ—Ä–∏—Å–∫–æ–Ω—Å—É–ª—å—Ç ‚Äî +79003149442
"""

@router.message(F.text == BTN_CONTACTS_CITY)
async def city_contacts_handler(m: Message):
    await _del_after(m)
    await m.answer(CITY_CONTACTS_TEXT, parse_mode="HTML", reply_markup=back_only_inline())


# -------------------- –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é --------------------
@router.callback_query(F.data == "menu:back")
async def back_to_menu(c: CallbackQuery):
    try:
        await c.message.delete()
    except Exception:
        pass
    await c.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_kb())
    await c.answer()